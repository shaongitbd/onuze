# Generated by Django 5.2 on 2025-05-01 16:58

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Community",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "path",
                    models.SlugField(
                        blank=True, max_length=120, null=True, unique=True
                    ),
                ),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("sidebar_content", models.TextField(blank=True, null=True)),
                (
                    "banner_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("icon_image", models.CharField(blank=True, max_length=255, null=True)),
                ("is_private", models.BooleanField(default=False)),
                ("is_restricted", models.BooleanField(default=False)),
                ("member_count", models.IntegerField(default=0)),
                ("is_nsfw", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_communities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Community",
                "verbose_name_plural": "Communities",
                "db_table": "community",
                "ordering": ["-member_count"],
            },
        ),
        migrations.CreateModel(
            name="CommunityMember",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("joined_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_approved", models.BooleanField(default=True)),
                ("is_banned", models.BooleanField(default=False)),
                ("ban_reason", models.TextField(blank=True, null=True)),
                ("banned_until", models.DateTimeField(blank=True, null=True)),
                (
                    "banned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="banned_community_members",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="communities.community",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Community Member",
                "verbose_name_plural": "Community Members",
                "db_table": "community_member",
            },
        ),
        migrations.CreateModel(
            name="CommunityModerator",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "appointed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_owner", models.BooleanField(default=False)),
                ("permissions", models.JSONField(default=dict)),
                (
                    "appointed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointed_moderators",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="moderators",
                        to="communities.community",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="moderated_communities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Community Moderator",
                "verbose_name_plural": "Community Moderators",
                "db_table": "community_moderator",
            },
        ),
        migrations.CreateModel(
            name="CommunityRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("order", models.IntegerField(default=0)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="communities.community",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Community Rule",
                "verbose_name_plural": "Community Rules",
                "db_table": "community_rule",
                "ordering": ["community", "order"],
            },
        ),
        migrations.CreateModel(
            name="CommunitySetting",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("key", models.CharField(max_length=100)),
                ("value", models.TextField()),
                ("value_type", models.CharField(default="string", max_length=50)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="communities.community",
                    ),
                ),
            ],
            options={
                "verbose_name": "Community Setting",
                "verbose_name_plural": "Community Settings",
                "db_table": "community_setting",
            },
        ),
        migrations.CreateModel(
            name="Flair",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("background_color", models.CharField(default="#FFFFFF", max_length=7)),
                ("text_color", models.CharField(default="#000000", max_length=7)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_mod_only", models.BooleanField(default=False)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flairs",
                        to="communities.community",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_flairs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Flair",
                "verbose_name_plural": "Flairs",
                "db_table": "flair",
                "ordering": ["community", "name"],
            },
        ),
        migrations.AddIndex(
            model_name="community",
            index=models.Index(fields=["path"], name="community_path_bf6d76_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="communitymember",
            unique_together={("community", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="communitymoderator",
            unique_together={("community", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="communitysetting",
            unique_together={("community", "key")},
        ),
    ]
